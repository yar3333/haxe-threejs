// Generated by Haxe 4.3.3
(function ($global) { "use strict";
var Main = function() { };
Main.main = function() {
	var scene = new THREE_Scene();
	var camera = new THREE_PerspectiveCamera(75,window.innerWidth / window.innerHeight,0.1,1000);
	var renderer = new THREE_WebGLRenderer();
	renderer.setSize(window.innerWidth,window.innerHeight,true);
	window.document.body.appendChild(renderer.domElement);
	var geometry = new THREE_BoxGeometry(1,1,1);
	var material = new THREE_MeshBasicMaterial({ color : 65280});
	var cube = new THREE_Mesh(geometry,material);
	scene.add(cube);
	camera.position.z = 5;
	var render = null;
	render = function(_) {
		window.requestAnimationFrame(render);
		cube.rotation.x += 0.1;
		cube.rotation.y += 0.1;
		renderer.render(scene,camera);
	};
	render(0);
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_three_ArrayLike = {};
js_three_ArrayLike.get = function(this1,key) {
	return this1[key];
};
js_three_ArrayLike.arrayWrite = function(this1,k,v) {
	this1[k] = v;
	return v;
};
var THREE_PerspectiveCamera = require("three").PerspectiveCamera;
var THREE_BoxGeometry = require("three").BoxGeometry;
var THREE_MeshBasicMaterial = require("three").MeshBasicMaterial;
var THREE_Mesh = require("three").Mesh;
var THREE_WebGLRenderer = require("three").WebGLRenderer;
var THREE_Scene = require("three").Scene;
Main.main();
})({});
