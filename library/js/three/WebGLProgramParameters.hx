package js.three;

import js.lib.*;

extern interface WebGLProgramParameters
{
	var isWebGL2 : Bool;
	var shaderID : String;
	var shaderType : String;
	var shaderName : String;
	var vertexShader : String;
	var fragmentShader : String;
	var defines : haxe.extern.EitherType<Dynamic<haxe.extern.EitherType<String, haxe.extern.EitherType<Float, Bool>>>, {}>;
	var customVertexShaderID : haxe.extern.EitherType<String, {}>;
	var customFragmentShaderID : haxe.extern.EitherType<String, {}>;
	var isRawShaderMaterial : Bool;
	var glslVersion : haxe.extern.EitherType<GLSLVersion, {}>;
	var precision : js.three.webglprogramparameters.Precision;
	var batching : Bool;
	var instancing : Bool;
	var instancingColor : Bool;
	var supportsVertexTextures : Bool;
	var outputColorSpace : ColorSpace;
	var alphaToCoverage : Bool;
	var map : Bool;
	var matcap : Bool;
	var envMap : Bool;
	var envMapMode : haxe.extern.EitherType<Mapping, Bool>;
	var envMapCubeUVHeight : Float;
	var aoMap : Bool;
	var lightMap : Bool;
	var bumpMap : Bool;
	var normalMap : Bool;
	var displacementMap : Bool;
	var emissiveMap : Bool;
	var normalMapObjectSpace : Bool;
	var normalMapTangentSpace : Bool;
	var metalnessMap : Bool;
	var roughnessMap : Bool;
	var anisotropy : Bool;
	var anisotropyMap : Bool;
	var clearcoat : Bool;
	var clearcoatMap : Bool;
	var clearcoatNormalMap : Bool;
	var clearcoatRoughnessMap : Bool;
	var iridescence : Bool;
	var iridescenceMap : Bool;
	var iridescenceThicknessMap : Bool;
	var sheen : Bool;
	var sheenColorMap : Bool;
	var sheenRoughnessMap : Bool;
	var specularMap : Bool;
	var specularColorMap : Bool;
	var specularIntensityMap : Bool;
	var transmission : Bool;
	var transmissionMap : Bool;
	var thicknessMap : Bool;
	var gradientMap : Bool;
	var opaque : Bool;
	var alphaMap : Bool;
	var alphaTest : Bool;
	var alphaHash : Bool;
	var combine : haxe.extern.EitherType<Combine, {}>;
	var mapUv : haxe.extern.EitherType<String, Bool>;
	var aoMapUv : haxe.extern.EitherType<String, Bool>;
	var lightMapUv : haxe.extern.EitherType<String, Bool>;
	var bumpMapUv : haxe.extern.EitherType<String, Bool>;
	var normalMapUv : haxe.extern.EitherType<String, Bool>;
	var displacementMapUv : haxe.extern.EitherType<String, Bool>;
	var emissiveMapUv : haxe.extern.EitherType<String, Bool>;
	var metalnessMapUv : haxe.extern.EitherType<String, Bool>;
	var roughnessMapUv : haxe.extern.EitherType<String, Bool>;
	var anisotropyMapUv : haxe.extern.EitherType<String, Bool>;
	var clearcoatMapUv : haxe.extern.EitherType<String, Bool>;
	var clearcoatNormalMapUv : haxe.extern.EitherType<String, Bool>;
	var clearcoatRoughnessMapUv : haxe.extern.EitherType<String, Bool>;
	var iridescenceMapUv : haxe.extern.EitherType<String, Bool>;
	var iridescenceThicknessMapUv : haxe.extern.EitherType<String, Bool>;
	var sheenColorMapUv : haxe.extern.EitherType<String, Bool>;
	var sheenRoughnessMapUv : haxe.extern.EitherType<String, Bool>;
	var specularMapUv : haxe.extern.EitherType<String, Bool>;
	var specularColorMapUv : haxe.extern.EitherType<String, Bool>;
	var specularIntensityMapUv : haxe.extern.EitherType<String, Bool>;
	var transmissionMapUv : haxe.extern.EitherType<String, Bool>;
	var thicknessMapUv : haxe.extern.EitherType<String, Bool>;
	var alphaMapUv : haxe.extern.EitherType<String, Bool>;
	var vertexTangents : Bool;
	var vertexColors : Bool;
	var vertexAlphas : Bool;
	var vertexUv1s : Bool;
	var vertexUv2s : Bool;
	var vertexUv3s : Bool;
	var pointsUvs : Bool;
	var fog : Bool;
	var useFog : Bool;
	var fogExp2 : Bool;
	var flatShading : Bool;
	var sizeAttenuation : Bool;
	var logarithmicDepthBuffer : Bool;
	var skinning : Bool;
	var morphTargets : Bool;
	var morphNormals : Bool;
	var morphColors : Bool;
	var morphTargetsCount : Float;
	var morphTextureStride : Float;
	var numDirLights : Float;
	var numPointLights : Float;
	var numSpotLights : Float;
	var numSpotLightMaps : Float;
	var numRectAreaLights : Float;
	var numHemiLights : Float;
	var numDirLightShadows : Float;
	var numPointLightShadows : Float;
	var numSpotLightShadows : Float;
	var numSpotLightShadowsWithMaps : Float;
	var numLightProbes : Float;
	var numClippingPlanes : Float;
	var numClipIntersection : Float;
	var dithering : Bool;
	var shadowMapEnabled : Bool;
	var shadowMapType : ShadowMapType;
	var toneMapping : ToneMapping;
	var useLegacyLights : Bool;
	var decodeVideoTexture : Bool;
	var premultipliedAlpha : Bool;
	var doubleSided : Bool;
	var flipSided : Bool;
	var useDepthPacking : Bool;
	var depthPacking : haxe.extern.EitherType<DepthPackingStrategies, 0>;
	var index0AttributeName : haxe.extern.EitherType<String, {}>;
	var extensionDerivatives : Bool;
	var extensionFragDepth : Bool;
	var extensionDrawBuffers : Bool;
	var extensionShaderTextureLOD : Bool;
	var extensionClipCullDistance : Bool;
	var extensionMultiDraw : Bool;
	var rendererExtensionFragDepth : Bool;
	var rendererExtensionDrawBuffers : Bool;
	var rendererExtensionShaderTextureLod : Bool;
	var rendererExtensionParallelShaderCompile : Bool;
	var customProgramCacheKey : String;
}